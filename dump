#!/usr/bin/env bash

set -e
set -f

DUMP_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/dump/trash"
DUMP_LOG="${XDG_DATA_HOME:-$HOME/.local/share}/dump/log"

[[ ! -d "${DUMP_DIR}" ]] && mkdir -p "${DUMP_DIR}"


function put() {
  local files_to_remove=("$@") esc candidates=()
  if [[ "${#files_to_remove[@]}" -eq 0 ]]; then
    esc=$(printf '\033')
    while IFS= read -r line; do
      candidates+=("${esc}[34m${line}/${esc}[m")
    done < <(fd --type d -d 1)
    while IFS= read -r line; do
      candidates+=("${line}")
    done < <(fd --type f -d 1)

    files_to_remove=($(
      IFS=$'\n'
      echo "${candidates[*]}" \
        | fzf --ansi --exit-0 --multi
    ))
    [[ -z "${files_to_remove}" ]] && exit 1
  fi
  for file in "${files_to_remove[@]}"; do
    mv -v "${file}" "${DUMP_DIR}"/
    echo "${file}: $PWD/${file}" >> "${DUMP_LOG}"
  done
}

function regret() {
  local files_removed=() file_name file_to_revert
  while IFS= read -r line; do
    file_name="${line%%: *}"
    if [[ -f "${DUMP_DIR}/${file_name}" ]] || [[ -d "${DUMP_DIR}/${file_name}" ]]; then
      [[ -z "${file_to_revert}" ]] && \
        file_to_revert="${line}" || \
        files_removed+=("${line}")
    fi
  done < <(tac "${DUMP_LOG}")
  printf "%s\n" "${files_removed[@]}" | tac > "${DUMP_LOG}"
  [[ -n "${file_to_revert}" ]] && \
    mv -v "${DUMP_DIR}/${file_to_revert%%: *}" "${file_to_revert##*: }"
}

action_comand="put"
case $1 in
  --put|-p)
    action_comand="put"
    shift
    ;;
  --clean|-c)
    action_comand="clean"
    shift
    ;;
  --regret|-r)
    action_comand='regret'
    shift
    ;;
esac

eval "${action_comand}" "$*"
